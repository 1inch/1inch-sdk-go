// Package fusionplus provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package fusionplus

// OrderInput defines model for OrderInput.
type OrderInput struct {
	// Maker Source chain address of the maker (wallet or contract address)
	Maker string `json:"maker"`

	// MakerAsset Source chain address of the maker asset
	MakerAsset string `json:"makerAsset"`

	// MakerTraits Includes some flags like: allow multiple fills, is partial fill allowed or not, price improvement, nonce, deadline etc. See <a href="https://github.com/1inch/limit-order-sdk/blob/master/src/limit-order/maker-traits.ts" target="_blank">maker-traits.ts</a>
	MakerTraits string `json:"makerTraits"`

	// MakingAmount Order maker's token amount
	MakingAmount string `json:"makingAmount"`

	// Receiver Destination chain address of the wallet or contract who will receive filled amount
	Receiver string `json:"receiver"`
	Salt     string `json:"salt"`

	// TakerAsset Destination chain address of the taker asset
	TakerAsset string `json:"takerAsset"`

	// TakingAmount Order taker's token amount
	TakingAmount string `json:"takingAmount"`
}

// SecretInput defines model for SecretInput.
type SecretInput struct {
	OrderHash string `json:"orderHash"`

	// Secret A secret for the fill hashlock
	Secret string `json:"secret"`
}

// SignedOrderInput defines model for SignedOrderInput.
type SignedOrderInput struct {
	// Extension An interaction call data. ABI encoded a set of makerAssetSuffix, takerAssetSuffix, makingAmountGetter, takingAmountGetter, predicate, permit, preInteraction, postInteraction.Lowest 160 bits of the order salt must be equal to the lowest 160 bits of the extension hash. See <a href="https://github.com/1inch/cross-chain-sdk/blob/master/src/cross-chain-order/escrow-extension.ts" target="_blank">escrow-extension.ts</a>>
	Extension string     `json:"extension"`
	Order     OrderInput `json:"order"`

	// QuoteId Quote id of the quote with presets
	QuoteId string `json:"quoteId"`

	// SecretHashes Secret Hashes, required for order with multiple fills allowed. keccak256(secret(idx))
	SecretHashes []string `json:"secretHashes,omitempty"`

	// Signature Signature of the cross chain order typed data (using signTypedData v4)
	Signature string `json:"signature"`

	// SrcChainId Source chain id
	SrcChainId float32 `json:"srcChainId"`
}

// RelayerControllerSubmitManyJSONBody defines parameters for RelayerControllerSubmitMany.
type RelayerControllerSubmitManyJSONBody = []string

// RelayerControllerSubmitJSONRequestBody defines body for RelayerControllerSubmit for application/json ContentType.
type RelayerControllerSubmitJSONRequestBody = SignedOrderInput

// RelayerControllerSubmitManyJSONRequestBody defines body for RelayerControllerSubmitMany for application/json ContentType.
type RelayerControllerSubmitManyJSONRequestBody = RelayerControllerSubmitManyJSONBody

// RelayerControllerSubmitSecretsJSONRequestBody defines body for RelayerControllerSubmitSecrets for application/json ContentType.
type RelayerControllerSubmitSecretsJSONRequestBody = SecretInput
